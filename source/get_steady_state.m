function [aN1_lin, aS1_lin] = get_steady_state(param)
% based on the desity rate equation:
% 
% dN = (param.etai.*param.I)./(param.param.const.q.*param.V) - carrierDen./param.taon - (param.gain.*(carrierDen-param.N0)*photonDen)./(1+param.eps.*photonDen);
% dS = -(photonDen./param.taop) + (con_factor.*param.beta.*carrierDen)./param.taon + (param.gain.*(carrierDen-param.N0).*photonDen)./(1+param.eps.*photonDen);
%
% where con_facor = Gamma = param.V/param.Vp;

con_factor = param.V/param.Vp;

aN1_lin = (1/((-con_factor)*param.const.q*param.taop*param.V+param.beta*con_factor*param.const.q*param.taop*param.V))*...
    ((-param.etai)*con_factor*param.I*param.taon*param.taop-...
    (param.beta*param.eps*param.etai*con_factor*param.I*param.const.q*param.taon*param.taop*param.V)/...
    (2*((-param.eps)*param.const.q*param.V-param.gain*param.const.q*param.taon*param.V))-...
    (param.etai*param.gain*con_factor*param.I*param.const.q*param.taon^2*param.taop*param.V)/...
    (2*((-param.eps)*param.const.q*param.V-param.gain*param.const.q*param.taon*param.V))+...
    (param.const.q^2*param.taon*param.V^2)/(2*((-param.eps)*param.const.q*param.V-param.gain*param.const.q*param.taon*param.V))+...
    (param.gain*con_factor*param.N0*param.const.q^2*param.taon*param.taop*param.V^2)/...
    (2*((-param.eps)*param.const.q*param.V-param.gain*param.const.q*param.taon*param.V))-...
    (param.beta*param.gain*con_factor*param.N0*param.const.q^2*param.taon*param.taop*param.V^2)/...
    (2*((-param.eps)*param.const.q*param.V-param.gain*param.const.q*param.taon*param.V))-(param.const.q*param.taon*param.V*...
    sqrt(-4*(param.beta*param.etai*con_factor*param.I*param.taop)...
    *((-param.eps)*param.const.q*param.V-param.gain*param.const.q*param.taon*param.V)+...
    (param.beta*param.eps*param.etai*con_factor*param.I*param.taop+...
    param.etai*param.gain*con_factor*param.I*param.taon*param.taop-...
    param.const.q*param.V-param.gain*con_factor*param.N0*param.const.q*param.taop*param.V+...
    param.beta*param.gain*con_factor*param.N0*param.const.q*param.taop*param.V).^2))/...
    (2*((-param.eps)*param.const.q*param.V-param.gain*param.const.q*param.taon*param.V)));

aS1_lin = (1/(2*((-param.eps)*param.const.q*param.V-param.gain*param.const.q*param.taon*param.V)))*...
    ((-param.beta)*param.eps*param.etai*con_factor*param.I*param.taop-...
    param.etai*param.gain*con_factor*param.I*param.taon*param.taop+param.const.q*param.V+...
    param.gain*con_factor*param.N0*param.const.q*param.taop*param.V-...
    param.beta*param.gain*con_factor*param.N0*param.const.q*param.taop*param.V-...
    sqrt(-4*(param.beta*param.etai*con_factor*param.I*param.taop)*((-param.eps)*param.const.q*param.V-...
    param.gain*param.const.q*param.taon*param.V)+(param.beta*param.eps*param.etai*con_factor*param.I*param.taop+...
    param.etai*param.gain*con_factor*param.I*param.taon*param.taop-param.const.q*param.V-...
    param.gain*con_factor*param.N0*param.const.q*param.taop*param.V+...
    param.beta*param.gain*con_factor*param.N0*param.const.q*param.taop*param.V).^2));